<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="# Composite configuration to install the IIS pre-requisites for php&#xD;&#xA;Configuration IisPreReqs_php&#xD;&#xA;{&#xD;&#xA;param&#xD;&#xA;    (&#xD;&#xA;        [Parameter(Mandatory = $true)]&#xD;&#xA;        [Validateset(&quot;Present&quot;,&quot;Absent&quot;)]&#xD;&#xA;        [String]&#xD;&#xA;        $Ensure&#xD;&#xA;    )    &#xD;&#xA;    foreach ($Feature in @(&quot;Web-Server&quot;,&quot;Web-Mgmt-Tools&quot;,&quot;web-Default-Doc&quot;, `&#xD;&#xA;&quot;Web-Dir-Browsing&quot;,&quot;Web-Http-Errors&quot;,&quot;Web-Static-Content&quot;,`&#xD;&#xA;            &quot;Web-Http-Logging&quot;,&quot;web-Stat-Compression&quot;,&quot;web-Filtering&quot;,`&#xD;&#xA;            &quot;web-CGI&quot;,&quot;web-ISAPI-Ext&quot;,&quot;web-ISAPI-Filter&quot;))&#xD;&#xA;    {&#xD;&#xA;        WindowsFeature &quot;$Feature$Number&quot;&#xD;&#xA;        {&#xD;&#xA;            Ensure = $Ensure&#xD;&#xA;            Name = $Feature&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;# Composite configuration to install PHP on IIS&#xD;&#xA;configuration xPhp&#xD;&#xA;{&#xD;&#xA;    param(&#xD;&#xA;        [Parameter(Mandatory = $true)]&#xD;&#xA;        [switch] $installMySqlExt,&#xD;&#xA;        [Parameter(Mandatory = $true)]&#xD;&#xA;        [string] $PackageFolder,&#xD;&#xA;        [Parameter(Mandatory = $true)]&#xD;&#xA;        [string] $DownloadUri,&#xD;&#xA;        [Parameter(Mandatory = $true)]&#xD;&#xA;        [string] $Vc2012RedistDownloadUri,&#xD;&#xA;        [Parameter(Mandatory = $true)]&#xD;&#xA;        [String] $DestinationPath,&#xD;&#xA;        [Parameter(Mandatory = $true)]&#xD;&#xA;        [string] $ConfigurationPath&#xD;&#xA;    )&#xD;&#xA;        # Make sure the IIS Prerequisites for PHP are present&#xD;&#xA;        IisPreReqs_php Iis&#xD;&#xA;        {&#xD;&#xA;            Ensure = &quot;Present&quot;&#xD;&#xA;            # Removed because this dependency does not work in &#xD;&#xA;     # Windows Server 2012 R2 and below&#xD;&#xA;            # This should work in WMF v5 and above&#xD;&#xA;            # DependsOn = &quot;[File]PackagesFolder&quot;&#xD;&#xA;        }&#xD;&#xA;        # Download and install Visual C Redist2012 from chocolatey.org&#xD;&#xA;        Package vcRedist&#xD;&#xA;        {&#xD;&#xA;            Path = $Vc2012RedistDownloadUri&#xD;&#xA;            ProductId = &quot;{CF2BEA3C-26EA-32F8-AA9B-331F7E34BA97}&quot;&#xD;&#xA;            Name = &quot;Microsoft Visual C++ 2012 x64 Minimum Runtime - 11.0.61030&quot;&#xD;&#xA;            Arguments = &quot;/install /passive /norestart&quot;&#xD;&#xA;        }&#xD;&#xA;        $phpZip = Join-Path $PackageFolder &quot;php.zip&quot;&#xD;&#xA;        # Make sure the PHP archine is in the package folder&#xD;&#xA;        xRemoteFile phpArchive&#xD;&#xA;        {&#xD;&#xA;            uri = $DownloadURI&#xD;&#xA;            DestinationPath = $phpZip&#xD;&#xA;        }&#xD;&#xA;        # Make sure the content of the PHP archine are in the PHP path&#xD;&#xA;        Archive php&#xD;&#xA;        {&#xD;&#xA;            Path = $phpZip&#xD;&#xA;            Destination  = $DestinationPath&#xD;&#xA;        }&#xD;&#xA;        if ($installMySqlExt )&#xD;&#xA;        {               &#xD;&#xA;            # Make sure the MySql extention for PHP is in the main PHP path&#xD;&#xA;            File phpMySqlExt&#xD;&#xA;            {&#xD;&#xA;                SourcePath = &quot;$($DestinationPath)\ext\php_mysql.dll&quot;&#xD;&#xA;                DestinationPath = &quot;$($DestinationPath)\php_mysql.dll&quot;&#xD;&#xA;                Ensure = &quot;Present&quot;&#xD;&#xA;                DependsOn = @(&quot;[Archive]PHP&quot;)&#xD;&#xA;                MatchSource = $true&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;            &#xD;&#xA;            # Make sure the php.ini is in the Php folder&#xD;&#xA;            File PhpIni&#xD;&#xA;            {&#xD;&#xA;                SourcePath = $ConfigurationPath&#xD;&#xA;                DestinationPath = &quot;$($DestinationPath)\php.ini&quot;&#xD;&#xA;                DependsOn = @(&quot;[Archive]PHP&quot;)&#xD;&#xA;                MatchSource = $true&#xD;&#xA;            }&#xD;&#xA;            # Make sure the php cgi module is registered with IIS&#xD;&#xA;            xIisModule phpHandler&#xD;&#xA;            {&#xD;&#xA;               Name = &quot;phpFastCgi&quot;&#xD;&#xA;               Path = &quot;$($DestinationPath)\php-cgi.exe&quot;&#xD;&#xA;               RequestPath = &quot;*.php&quot;&#xD;&#xA;               Verb = &quot;*&quot;&#xD;&#xA;               Ensure = &quot;Present&quot;&#xD;&#xA;               DependsOn = @(&quot;[Package]vcRedist&quot;,&quot;[File]PhpIni&quot;) &#xD;&#xA;               # Removed because this dependency does not work in &#xD;&#xA; # Windows Server 2012 R2 and below&#xD;&#xA;&#x9;        # This should work in WMF v5 and above&#xD;&#xA;    &#x9;        # &quot;[IisPreReqs_php]Iis&quot; &#xD;&#xA;            }&#xD;&#xA;        # Make sure the php binary folder is in the path&#xD;&#xA;        Environment PathPhp&#xD;&#xA;        {&#xD;&#xA;            Name = &quot;Path&quot;&#xD;&#xA;            Value = &quot;;$($DestinationPath)&quot;&#xD;&#xA;            Ensure = &quot;Present&quot;&#xD;&#xA;            Path = $true&#xD;&#xA;            DependsOn = &quot;[Archive]PHP&quot;&#xD;&#xA;        }&#xD;&#xA;}&#xD;&#xA;xPhp -PackageFolder &quot;C:\packages&quot; `&#xD;&#xA;    -DownloadUri  -DownloadUri &quot;http://windows.php.net/downloads/releases/php-5.5.13-Win32-VC11-x64.zip&quot; `&#xD;&#xA;    -Vc2012RedistDownloadUri &quot;http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU_4/vcredist_x64.exe&quot; `&#xD;&#xA;    -DestinationPath &quot;C:\php&quot; `&#xD;&#xA;    -ConfigurationPath &quot;C:\MyPhp.ini&quot; `&#xD;&#xA;    -installMySqlExt $false &#xD;&#xA;" />
  <Code Content="configuration Sample_xWebsite_StopDefault&#xD;&#xA;{&#xD;&#xA;    param&#xD;&#xA;    (&#xD;&#xA;        # Target nodes to apply the configuration&#xD;&#xA;        [string[]]$NodeName = 'localhost'&#xD;&#xA;    )&#xD;&#xA;    # Import the module that defines custom resources&#xD;&#xA;    Import-DscResource -Module xWebAdministration&#xD;&#xA;    Node $NodeName&#xD;&#xA;    {&#xD;&#xA;        # Install the IIS role&#xD;&#xA;        WindowsFeature IIS&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Web-Server&quot;&#xD;&#xA;        }&#xD;&#xA;        # Stop the default website&#xD;&#xA;        xWebsite DefaultSite &#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Default Web Site&quot;&#xD;&#xA;            State           = &quot;Stopped&quot;&#xD;&#xA;            PhysicalPath    = &quot;C:\inetpub\wwwroot&quot;&#xD;&#xA;            DependsOn       = &quot;[WindowsFeature]IIS&quot;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}" />
  <Code Content="configuration Sample_xWebsite_NewWebsite&#xD;&#xA;{&#xD;&#xA;    param&#xD;&#xA;    (&#xD;&#xA;        # Target nodes to apply the configuration&#xD;&#xA;        [string[]]$NodeName = 'localhost',&#xD;&#xA;        # Name of the website to create&#xD;&#xA;        [Parameter(Mandatory)]&#xD;&#xA;        [ValidateNotNullOrEmpty()]&#xD;&#xA;        [String]$WebSiteName,&#xD;&#xA;        # Source Path for Website content&#xD;&#xA;        [Parameter(Mandatory)]&#xD;&#xA;        [ValidateNotNullOrEmpty()]&#xD;&#xA;        [String]$SourcePath,&#xD;&#xA;        # Destination path for Website content&#xD;&#xA;        [Parameter(Mandatory)]&#xD;&#xA;        [ValidateNotNullOrEmpty()]&#xD;&#xA;        [String]$DestinationPath&#xD;&#xA;    )&#xD;&#xA;    # Import the module that defines custom resources&#xD;&#xA;    Import-DscResource -Module xWebAdministration&#xD;&#xA;    Node $NodeName&#xD;&#xA;    {&#xD;&#xA;        # Install the IIS role&#xD;&#xA;        WindowsFeature IIS&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Web-Server&quot;&#xD;&#xA;        }&#xD;&#xA;        # Install the ASP .NET 4.5 role&#xD;&#xA;        WindowsFeature AspNet45&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Web-Asp-Net45&quot;&#xD;&#xA;        }&#xD;&#xA;        # Stop the default website&#xD;&#xA;        xWebsite DefaultSite &#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Default Web Site&quot;&#xD;&#xA;            State           = &quot;Stopped&quot;&#xD;&#xA;            PhysicalPath    = &quot;C:\inetpub\wwwroot&quot;&#xD;&#xA;            DependsOn       = &quot;[WindowsFeature]IIS&quot;&#xD;&#xA;        }&#xD;&#xA;        # Copy the website content&#xD;&#xA;        File WebContent&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            SourcePath      = $SourcePath&#xD;&#xA;            DestinationPath = $DestinationPath&#xD;&#xA;            Recurse         = $true&#xD;&#xA;            Type            = &quot;Directory&quot;&#xD;&#xA;            DependsOn       = &quot;[WindowsFeature]AspNet45&quot;&#xD;&#xA;        }       &#xD;&#xA;        # Create the new Website with HTTPS&#xD;&#xA;        xWebsite NewWebsite&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = $WebSiteName&#xD;&#xA;            State           = &quot;Started&quot;&#xD;&#xA;            PhysicalPath    = $DestinationPath&#xD;&#xA;            BindingInfo     = MSFT_xWebBindingInformation&#xD;&#xA;                             {&#xD;&#xA;                               Protocol              = &quot;HTTPS&quot;&#xD;&#xA;                               Port                  = 8443&#xD;&#xA;                               CertificateThumbprint =&quot;71AD93562316F21F74606F1096B85D66289ED60F&quot;&#xD;&#xA;                               CertificateStoreName  = &quot;WebHosting&quot;&#xD;&#xA;                             }&#xD;&#xA;            DependsOn       = &quot;[File]WebContent&quot;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;} " />
  <Code Content="configuration Sample_xWebsite_FromConfigurationData&#xD;&#xA;{&#xD;&#xA;    # Import the module that defines custom resources&#xD;&#xA;    Import-DscResource -Module xWebAdministration&#xD;&#xA;    # Dynamically find the applicable nodes from configuration data&#xD;&#xA;    Node $AllNodes.where{$_.Role -eq &quot;Web&quot;}.NodeName&#xD;&#xA;    {&#xD;&#xA;        # Install the IIS role&#xD;&#xA;        WindowsFeature IIS&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Web-Server&quot;&#xD;&#xA;        }&#xD;&#xA;        # Install the ASP .NET 4.5 role&#xD;&#xA;        WindowsFeature AspNet45&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Web-Asp-Net45&quot;&#xD;&#xA;        }&#xD;&#xA;        # Stop an existing website (set up in Sample_xWebsite_Default)&#xD;&#xA;        xWebsite DefaultSite &#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = &quot;Default Web Site&quot;&#xD;&#xA;            State           = &quot;Stopped&quot;&#xD;&#xA;            PhysicalPath    = $Node.DefaultWebSitePath&#xD;&#xA;            DependsOn       = &quot;[WindowsFeature]IIS&quot;&#xD;&#xA;        }&#xD;&#xA;        # Copy the website content&#xD;&#xA;        File WebContent&#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            SourcePath      = $Node.SourcePath&#xD;&#xA;            DestinationPath = $Node.DestinationPath&#xD;&#xA;            Recurse         = $true&#xD;&#xA;            Type            = &quot;Directory&quot;&#xD;&#xA;            DependsOn       = &quot;[WindowsFeature]AspNet45&quot;&#xD;&#xA;        }       &#xD;&#xA;        # Create a new website&#xD;&#xA;        xWebsite BakeryWebSite &#xD;&#xA;        {&#xD;&#xA;            Ensure          = &quot;Present&quot;&#xD;&#xA;            Name            = $Node.WebsiteName&#xD;&#xA;            State           = &quot;Started&quot;&#xD;&#xA;            PhysicalPath    = $Node.DestinationPath&#xD;&#xA;            DependsOn       = &quot;[File]WebContent&quot;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;# Content of configuration data file (e.g. ConfigurationData.psd1) could be:&#xD;&#xA;# Hashtable to define the environmental data&#xD;&#xA;@{&#xD;&#xA;    # Node specific data&#xD;&#xA;    AllNodes = @(&#xD;&#xA;       # All the WebServer has following identical information &#xD;&#xA;       @{&#xD;&#xA;            NodeName           = &quot;*&quot;&#xD;&#xA;            WebsiteName        = &quot;FourthCoffee&quot;&#xD;&#xA;            SourcePath         = &quot;C:\BakeryWebsite\&quot;&#xD;&#xA;            DestinationPath    = &quot;C:\inetpub\FourthCoffee&quot;&#xD;&#xA;            DefaultWebSitePath = &quot;C:\inetpub\wwwroot&quot;&#xD;&#xA;       },&#xD;&#xA;       @{&#xD;&#xA;            NodeName           = &quot;WebServer1.fourthcoffee.com&quot;&#xD;&#xA;            Role               = &quot;Web&quot;&#xD;&#xA;        },&#xD;&#xA;       @{&#xD;&#xA;            NodeName           = &quot;WebServer2.fourthcoffee.com&quot;&#xD;&#xA;            Role               = &quot;Web&quot;&#xD;&#xA;        }&#xD;&#xA;    );&#xD;&#xA;}&#xD;&#xA;# Pass the configuration data to configuration as follows:&#xD;&#xA;Sample_xWebsite_FromConfigurationData -ConfigurationData ConfigurationData.psd1" />
  <Code Content="# End to end sample for xWebAdministration &#xD;&#xA; &#xD;&#xA;configuration Sample_EndToEndxWebAdministration&#xD;&#xA;{&#xD;&#xA; &#xD;&#xA;    Node $AllNodes.NodeName&#xD;&#xA;    {&#xD;&#xA;        # Create a Web Application Pool&#xD;&#xA;        xWebAppPool NewWebAppPool&#xD;&#xA;        {&#xD;&#xA;            Name   = $Node.WebAppPoolName&#xD;&#xA;            Ensure = &quot;Present&quot;&#xD;&#xA;            State  = &quot;Started&quot;&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        #Create a New Website with Port&#xD;&#xA;        xWebSite NewWebSite&#xD;&#xA;        {&#xD;&#xA;            Name   = $Node.WebSiteName&#xD;&#xA;            Ensure = &quot;Present&quot;&#xD;&#xA;            BindingInfo = MSFT_xWebBindingInformation&#xD;&#xA;                        {&#xD;&#xA;                            Port = $Node.Port&#xD;&#xA;                        }&#xD;&#xA;            PhysicalPath = $Node.PhysicalPathWebSite&#xD;&#xA;            State = &quot;Started&quot;&#xD;&#xA;            DependsOn = @(&quot;[xWebAppPool]NewWebAppPool&quot;)&#xD;&#xA;        }&#xD;&#xA;      &#xD;&#xA;        #Create a new Web Application&#xD;&#xA;        xWebApplication NewWebApplication&#xD;&#xA;        {&#xD;&#xA;            Name = $Node.WebApplicationName&#xD;&#xA;            Website = $Node.WebSiteName&#xD;&#xA;            WebAppPool =  $Node.WebAppPoolName&#xD;&#xA;            PhysicalPath = $Node.PhysicalPathWebApplication&#xD;&#xA;            Ensure = &quot;Present&quot;&#xD;&#xA;            DependsOn = @(&quot;[xWebSite]NewWebSite&quot;)&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        #Create a new virtual Directory&#xD;&#xA;        xWebVirtualDirectory NewVirtualDir&#xD;&#xA;        {&#xD;&#xA;            Name = $Node.WebVirtualDirectoryName&#xD;&#xA;            Website = $Node.WebSiteName&#xD;&#xA;            WebApplication =  $Node.WebApplicationName&#xD;&#xA;            PhysicalPath = $Node.PhysicalPathVirtualDir&#xD;&#xA;            Ensure = &quot;Present&quot;&#xD;&#xA;            DependsOn = @(&quot;[xWebApplication]NewWebApplication&quot;)&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        File CreateWebConfig&#xD;&#xA;        {&#xD;&#xA;         DestinationPath = $Node.PhysicalPathWebSite + &quot;\web.config&quot;&#xD;&#xA;         Contents = &quot;&lt;?xml version=`&quot;1.0`&quot; encoding=`&quot;UTF-8`&quot;?&gt;&#xD;&#xA;                        &lt;configuration&gt;&#xD;&#xA;                        &lt;/configuration&gt;&quot;&#xD;&#xA;                Ensure = &quot;Present&quot;&#xD;&#xA;         DependsOn = @(&quot;[xWebVirtualDirectory]NewVirtualDir&quot;)&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        xWebConfigKeyValue ModifyWebConfig&#xD;&#xA;        {&#xD;&#xA;          Ensure = &quot;Present&quot;&#xD;&#xA;          ConfigSection = &quot;AppSettings&quot;&#xD;&#xA;          KeyValuePair = @{key=&quot;key1&quot;;value=&quot;value1&quot;}&#xD;&#xA;          IsAttribute = $false&#xD;&#xA;          WebsitePath = &quot;IIS:\sites\&quot; + $Node.WebsiteName&#xD;&#xA;          DependsOn = @(&quot;[File]CreateWebConfig&quot;)&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA; &#xD;&#xA;#You can place the below in another file to create multiple websites using the same configuration block. &#xD;&#xA;$Config = @{&#xD;&#xA;    AllNodes = @(&#xD;&#xA;        @{&#xD;&#xA;            NodeName = &quot;localhost&quot;;&#xD;&#xA;            WebAppPoolName = &quot;TestAppPool&quot;;&#xD;&#xA;            WebSiteName = &quot;TestWebSite&quot;;&#xD;&#xA;            PhysicalPathWebSite = &quot;C:\web\webSite&quot;;&#xD;&#xA;            WebApplicationName = &quot;TestWebApplication&quot;;&#xD;&#xA;            PhysicalPathWebApplication = &quot;C:\web\webApplication&quot;;&#xD;&#xA;            WebVirtualDirectoryName = &quot;TestVirtualDir&quot;;&#xD;&#xA;            PhysicalPathVirtualDir = &quot;C:\web\virtualDir&quot;;&#xD;&#xA;            Port = 100&#xD;&#xA;          }&#xD;&#xA;      )&#xD;&#xA;   }&#xD;&#xA;  &#xD;&#xA;Sample_EndToEndxWebAdministration -ConfigurationData $config&#xD;&#xA;Start-DscConfiguration ./Sample_EndToEndxWebAdministration -wait -Verbose&#xD;&#xA;" />
</CodeSnippets>