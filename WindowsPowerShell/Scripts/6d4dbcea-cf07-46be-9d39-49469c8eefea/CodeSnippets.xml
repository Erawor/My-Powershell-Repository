<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="&#xD;&#xA;[reflection.assembly]::LoadWithPartialName(&quot;Microsoft.UpdateServices.Administration&quot;) | out-null&#xD;&#xA;&#xD;&#xA;if (!$wsus) {&#xD;&#xA;        $wsus = [Microsoft.UpdateServices.Administration.AdminProxy]::GetUpdateServer();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;$computerScope = new-object Microsoft.UpdateServices.Administration.ComputerTargetScope;&#xD;&#xA;$computerScope.IncludedInstallationStates = [Microsoft.UpdateServices.Administration.UpdateInstallationStates]::InstalledPendingReboot;&#xD;&#xA;&#xD;&#xA;$updateScope = new-object Microsoft.UpdateServices.Administration.UpdateScope;&#xD;&#xA;$updateScope.IncludedInstallationStates = [Microsoft.UpdateServices.Administration.UpdateInstallationStates]::InstalledPendingReboot;&#xD;&#xA;&#xD;&#xA;$computers = $wsus.GetComputerTargets($computerScope);&#xD;&#xA;&#xD;&#xA;$computers | foreach-object {&#xD;&#xA;                $_.FullDomainName | write-host;&#xD;&#xA;&#xD;&#xA;                # Show which updates are causing the reboot required for the computer.  Remove the next 5 lines to only generate a list of computers.&#xD;&#xA;                $updatesForReboot = $_.GetUpdateInstallationInfoPerUpdate($updateScope);&#xD;&#xA;                $updatesForReboot | foreach-object {&#xD;&#xA;                $neededUpdate = $wsus.GetUpdate($_.UpdateId);&#xD;&#xA;                &quot;   &quot;+$neededUpdate.Title | write-host;&#xD;&#xA;                # Remove previous lines to only show computers that need updates&#xD;&#xA;     }&#xD;&#xA;}&#xD;&#xA;" />
</CodeSnippets>