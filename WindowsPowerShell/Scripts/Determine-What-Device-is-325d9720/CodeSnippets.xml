<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="&lt;#&#xD;&#xA;.SYNOPSIS&#xD;&#xA;    Get-LockedOutUser.ps1 returns a list of users who were locked out in Active Directory.&#xD;&#xA; &#xD;&#xA;.DESCRIPTION&#xD;&#xA;    Get-LockedOutUser.ps1 is an advanced script that returns a list of users who were locked out in Active Directory&#xD;&#xA;by querying the event logs on the PDC emulation in the domain.&#xD;&#xA; &#xD;&#xA;.PARAMETER UserName&#xD;&#xA;    The userid of the specific user you are looking for lockouts for. The default is all locked out users.&#xD;&#xA; &#xD;&#xA;.PARAMETER StartTime&#xD;&#xA;    The datetime to start searching from. The default is all datetimes that exist in the event logs.&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1 -UserName 'mike'&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1 -StartTime (Get-Date).AddDays(-1)&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1 -UserName 'miker' -StartTime (Get-Date).AddDays(-1)&#xD;&#xA;#&gt;&#xD;&#xA;&#xD;&#xA;[CmdletBinding()]&#xD;&#xA;param (&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [string]$DomainName = $env:USERDOMAIN,&#xD;&#xA;&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [string]$UserName = &quot;*&quot;,&#xD;&#xA;&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [datetime]$StartTime = (Get-Date).AddDays(-3)&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;Invoke-Command -ComputerName (&#xD;&#xA;&#xD;&#xA;    [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain((&#xD;&#xA;        New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext('Domain', $DomainName))&#xD;&#xA;    ).PdcRoleOwner.name&#xD;&#xA;&#xD;&#xA;) {&#xD;&#xA;&#xD;&#xA;Get-WinEvent -FilterHashtable @{LogName='Security';Id=4740;StartTime=$Using:StartTime} |&#xD;&#xA;    Where-Object {$_.Properties[0].Value -like &quot;$Using:UserName&quot;} |&#xD;&#xA;    Select-Object -Property TimeCreated, &#xD;&#xA;        @{Label='UserName';Expression={$_.Properties[0].Value}},&#xD;&#xA;        @{Label='ClientName';Expression={$_.Properties[1].Value}}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;} -Credential (Get-Credential) |&#xD;&#xA;Select-Object -Property TimeCreated, 'UserName', 'ClientName'" />
  <Code Content="&lt;#&#xD;&#xA;.SYNOPSIS&#xD;&#xA;    Get-LockedOutUser.ps1 returns a list of users who were locked out in Active Directory.&#xD;&#xA; &#xD;&#xA;.DESCRIPTION&#xD;&#xA;    Get-LockedOutUser.ps1 is an advanced script that returns a list of users who were locked out in Active Directory&#xD;&#xA;by querying the event logs on the PDC emulation in the domain.&#xD;&#xA; &#xD;&#xA;.PARAMETER UserName&#xD;&#xA;    The userid of the specific user you are looking for lockouts for. The default is all locked out users.&#xD;&#xA; &#xD;&#xA;.PARAMETER StartTime&#xD;&#xA;    The datetime to start searching from. The default is all datetimes that exist in the event logs.&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1 -UserName 'mike'&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1 -StartTime (Get-Date).AddDays(-1)&#xD;&#xA; &#xD;&#xA;.EXAMPLE&#xD;&#xA;    Get-LockedOutUser.ps1 -UserName 'miker' -StartTime (Get-Date).AddDays(-1)&#xD;&#xA;#&gt;&#xD;&#xA;&#xD;&#xA;[CmdletBinding()]&#xD;&#xA;param (&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [string]$DomainName = $env:USERDOMAIN,&#xD;&#xA;&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [string]$UserName = &quot;*&quot;,&#xD;&#xA;&#xD;&#xA;    [ValidateNotNullOrEmpty()]&#xD;&#xA;    [datetime]$StartTime = (Get-Date).AddDays(-3)&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;Invoke-Command -ComputerName (&#xD;&#xA;&#xD;&#xA;    [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain((&#xD;&#xA;        New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext('Domain', $DomainName))&#xD;&#xA;    ).PdcRoleOwner.name&#xD;&#xA;&#xD;&#xA;) {&#xD;&#xA;&#xD;&#xA;Get-WinEvent -FilterHashtable @{LogName='Security';Id=4740;StartTime=$Using:StartTime} |&#xD;&#xA;    Where-Object {$_.Properties[0].Value -like &quot;$Using:UserName&quot;} |&#xD;&#xA;    Select-Object -Property TimeCreated, &#xD;&#xA;        @{Label='UserName';Expression={$_.Properties[0].Value}},&#xD;&#xA;        @{Label='ClientName';Expression={$_.Properties[1].Value}}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;} -Credential (Get-Credential) |&#xD;&#xA;Select-Object -Property TimeCreated, 'UserName', 'ClientName'" />
</CodeSnippets>