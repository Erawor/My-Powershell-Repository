<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="&#xD;&#xA;# Warning: The publish operation will create a cab from everything in the&#xD;&#xA;# packagepath directory (recusively). Do *not* point to a file in the root of&#xD;&#xA;# your C:\ drive or your entire disk will be cab’ed (!). Make sure the setup&#xD;&#xA;# file (and all files it needs) are in their own directory &#xD;&#xA;&#xD;&#xA;$packagepath = “C:\PackageDir\setup.msp”&#xD;&#xA;$title = “MyPackage” # The title of the package&#xD;&#xA;$description = “I’m publishing my own package – cool” # Description of package&#xD;&#xA; [reflection.assembly]::LoadWithPartialName(&quot;Microsoft.UpdateServices.Administration&quot;) | out-null&#xD;&#xA;$wsus = [Microsoft.UpdateServices.Administration.AdminProxy]::GetUpdateServer();&#xD;&#xA;$sdp = new-object('microsoft.updateservices.administration.SoftwareDistributionPackage')&#xD;&#xA;$sdp.PopulatePackageFromWindowsInstallerPatch($packagepath)&#xD;&#xA;$sdp.Title = $title&#xD;&#xA;$sdp.Description = $description&#xD;&#xA;$sdpFilePath = $env:temp + “\” + $title + $sdp.PackageId&#xD;&#xA;$sdp.Save($sdpFilePath)&#xD;&#xA;$publisher = $wsus.GetPublisher($sdpFilePath)&#xD;&#xA;$dir = (new-object(&quot;System.IO.FileInfo&quot;)($packagepath)).Directory&#xD;&#xA;$publisher.PublishPackage($dir, $null)&#xD;&#xA;" />
</CodeSnippets>