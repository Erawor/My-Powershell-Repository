<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="#  *** THIS SCRIPT IS PROVIDED WITHOUT WARRANTY, USE AT YOUR OWN RISK ***&#xD;&#xA;#&#xD;&#xA;# Author: David Hall, signalwarrant.com&#xD;&#xA;#&#xD;&#xA;# This script will allow you to start the wuauserv service and force a WSUS checkin.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;# Define a service variable&#xD;&#xA;$service = get-service -Name wuauserv&#xD;&#xA;&#xD;&#xA;# Check to see if the service variable is stopped&#xD;&#xA;if ($service.Status -eq &quot;Stopped&quot;){&#xD;&#xA;    &#xD;&#xA;    # If the service is stopped we're going to start it and force WSUS checkin&#xD;&#xA;    # and Exit&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;1. WUAUSERV is stopped... starting&quot;&#xD;&#xA;    Start-Service wuauserv &#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;2. WUAUSERV started&quot;    &#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;3. Forcing WSUS Checkin&quot;&#xD;&#xA;    Invoke-Command {wuauclt.exe /detectnow}&#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;4. Checkin Complete&quot;&#xD;&#xA;    Exit  &#xD;&#xA;    &#xD;&#xA;    } else {&#xD;&#xA;    &#xD;&#xA;    # If the service is started we'll just for the WSUS checkin and Exit&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;1. Forcing WSUS Checkin&quot;&#xD;&#xA;    Invoke-Command {wuauclt.exe /detectnow}&#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;2. Checkin Complete&quot;&#xD;&#xA;    Exit&#xD;&#xA;    &#xD;&#xA;    }" />
  <Code Content="#  *** THIS SCRIPT IS PROVIDED WITHOUT WARRANTY, USE AT YOUR OWN RISK ***&#xD;&#xA;#&#xD;&#xA;# Author: David Hall, signalwarrant.com&#xD;&#xA;#&#xD;&#xA;# This script will allow you to start the wuauserv service and force a WSUS checkin.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;# Define a service variable&#xD;&#xA;$service = get-service -Name wuauserv&#xD;&#xA;&#xD;&#xA;# Check to see if the service variable is stopped&#xD;&#xA;if ($service.Status -eq &quot;Stopped&quot;){&#xD;&#xA;    &#xD;&#xA;    # If the service is stopped we're going to start it and force WSUS checkin&#xD;&#xA;    # and Exit&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;1. WUAUSERV is stopped... starting&quot;&#xD;&#xA;    Start-Service wuauserv &#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;2. WUAUSERV started&quot;    &#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;3. Forcing WSUS Checkin&quot;&#xD;&#xA;    Invoke-Command {wuauclt.exe /detectnow}&#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;4. Checkin Complete&quot;&#xD;&#xA;    Exit  &#xD;&#xA;    &#xD;&#xA;    } else {&#xD;&#xA;    &#xD;&#xA;    # If the service is started we'll just for the WSUS checkin and Exit&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;1. Forcing WSUS Checkin&quot;&#xD;&#xA;    Invoke-Command {wuauclt.exe /detectnow}&#xD;&#xA;        [System.Threading.Thread]::Sleep(1500)&#xD;&#xA;    Write-host -foregroundcolor Cyan &quot;2. Checkin Complete&quot;&#xD;&#xA;    Exit&#xD;&#xA;    &#xD;&#xA;    }" />
</CodeSnippets>